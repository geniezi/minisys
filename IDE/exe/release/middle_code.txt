D:/SEU/IDE/exe/asm_result//Fibonacci.asm-------------------------------------------------
                                 op      arg1              arg2       des
        Fibonacci :   0)        j==     8(x8)                 1   LABEL_4
                  :   1)          j                               LABEL_2
          LABEL_2 :   2)        j==     8(x8)                 2   LABEL_4
                  :   3)          j                               LABEL_6
          LABEL_4 :   4)     return         1                            
                  :   5)          j                              LABEL_18
          LABEL_6 :   6)        sub     8(x8)                 1    -4(x8)
                  :   7)      param    -4(x8)                            
                  :   8)       call         1         Fibonacci          
                  :   9)        MOV         #                     -12(x8)
                  :  10)        MOV   -12(x8)                     -16(x8)
                  :  11)        sub     8(x8)                 2   -20(x8)
                  :  12)      param   -20(x8)                            
                  :  13)       call         1         Fibonacci          
                  :  14)        MOV         #                     -24(x8)
                  :  15)        MOV   -24(x8)                     -28(x8)
                  :  16)        add   -16(x8)           -28(x8)   -32(x8)
                  :  17)     return   -32(x8)                            
         LABEL_18 :  18)        nop                                      
             main :  19)        MOV     20000                     -12(x8)
         LABEL_20 :  20)        j!=         1                 0  LABEL_22
                  :  21)          j                              LABEL_40
         LABEL_22 :  22)       call         0     read_keyboard          
                  :  23)        MOV         #                     -20(x8)
                  :  24)        MOV   -20(x8)                     -24(x8)
                  :  25)        MOV   -24(x8)                      -4(x8)
                  :  26)      param    -4(x8)                            
                  :  27)       call         1         Fibonacci          
                  :  28)        MOV         #                     -28(x8)
                  :  29)        MOV   -28(x8)                     -32(x8)
                  :  30)        MOV   -32(x8)                      -8(x8)
         LABEL_31 :  31)        j>=   -12(x8)                 0  LABEL_33
                  :  32)          j                              LABEL_20
         LABEL_33 :  33)        sub   -12(x8)                 1   -36(x8)
                  :  34)        MOV   -36(x8)                     -12(x8)
                  :  35)      param    -8(x8)                            
                  :  36)       call         1smart_display_digit          
                  :  37)        MOV         #                     -40(x8)
                  :  38)          j                              LABEL_31
                  :  39)          j                              LABEL_20
         LABEL_40 :  40)     return         0                            
                  :  41)        nop                                      
D:/SEU/IDE/exe/asm_result//digits_driver.asm-------------------------------------------------
                                 op      arg1              arg2       des
    display_digit :   0)         j<    12(x8)                 0   LABEL_2
                  :   1)          j                               LABEL_3
          LABEL_2 :   2)        MOV         0                      12(x8)
          LABEL_3 :   3)         j>    12(x8)                17   LABEL_5
                  :   4)          j                               LABEL_6
          LABEL_5 :   5)        MOV        17                      12(x8)
          LABEL_6 :   6)         j<     8(x8)                 0   LABEL_8
                  :   7)          j                               LABEL_9
          LABEL_8 :   8)        MOV         0                       8(x8)
          LABEL_9 :   9)         j>     8(x8)                 7  LABEL_11
                  :  10)          j                              LABEL_12
         LABEL_11 :  11)        MOV         7                       8(x8)
         LABEL_12 :  12)        set     -1024            12(x8)          
                  :  13)        set     -1020             8(x8)          
                  :  14)     return                                      
                  :  15)        nop                                      
     clear_digits :  16)        MOV         8                      -4(x8)
                  :  17)        set     -1020            -4(x8)          
                  :  18)     return                                      
                  :  19)        nop                                      
smart_display_digit :  20)        MOV         0                      -4(x8)
                  :  21)        MOV     8(x8)                      -8(x8)
         LABEL_22 :  22)        j>=    -8(x8)                 0  LABEL_24
                  :  23)          j                              LABEL_37
         LABEL_24 :  24)         j<    -4(x8)                 8  LABEL_26
                  :  25)          j                              LABEL_37
         LABEL_26 :  26)        rem    -8(x8)                10   -16(x8)
                  :  27)        MOV   -16(x8)                     -12(x8)
                  :  28)        div    -8(x8)                10   -20(x8)
                  :  29)        MOV   -20(x8)                      -8(x8)
                  :  30)      param   -12(x8)                            
                  :  31)      param    -4(x8)                            
                  :  32)       call         2     display_digit          
                  :  33)        MOV         #                     -28(x8)
                  :  34)        add    -4(x8)                 1   -32(x8)
                  :  35)        MOV   -32(x8)                      -4(x8)
                  :  36)          j                              LABEL_22
         LABEL_37 :  37)        MOV         8                      -4(x8)
                  :  38)      param         0                            
                  :  39)      param    -4(x8)                            
                  :  40)       call         2     display_digit          
                  :  41)        MOV         #                     -36(x8)
                  :  42)     return                                      
                  :  43)        nop                                      
D:/SEU/IDE/exe/asm_result//keyboard_driver.asm-------------------------------------------------
                                 op      arg1              arg2       des
    read_keyboard :   0)       load     -1008                      -8(x8)
                  :   1)        MOV    -8(x8)                      -4(x8)
                  :   2)     return    -4(x8)                            
                  :   3)        nop                                      
   clear_keyboard :   4)        set     -1008                -1          
                  :   5)     return                                      
                  :   6)        nop                                      
