#ifndef _ACTION_LEX_H
#define _ACTION_LEX_H
#include <set>
#include <string>
#include <map>
using namespace std;
void initFinalSet(set<unsigned int>& finalSet) {
	finalSet.insert(1);
	finalSet.insert(2);
	finalSet.insert(3);
	finalSet.insert(4);
	finalSet.insert(5);
	finalSet.insert(6);
	finalSet.insert(7);
	finalSet.insert(8);
	finalSet.insert(9);
	finalSet.insert(10);
	finalSet.insert(11);
	finalSet.insert(12);
	finalSet.insert(13);
	finalSet.insert(14);
	finalSet.insert(15);
	finalSet.insert(17);
	finalSet.insert(18);
	finalSet.insert(19);
	finalSet.insert(21);
	finalSet.insert(22);
	finalSet.insert(23);
	finalSet.insert(24);
	finalSet.insert(25);
	finalSet.insert(26);
	finalSet.insert(27);
	finalSet.insert(28);
	finalSet.insert(29);
	finalSet.insert(30);
	finalSet.insert(31);
	finalSet.insert(32);
	finalSet.insert(33);
	finalSet.insert(34);
	finalSet.insert(35);
	finalSet.insert(36);
	finalSet.insert(37);
	finalSet.insert(38);
	finalSet.insert(39);
	finalSet.insert(44);
	finalSet.insert(45);
	finalSet.insert(46);
	finalSet.insert(47);
	finalSet.insert(48);
	finalSet.insert(49);
	finalSet.insert(50);
	finalSet.insert(51);
	finalSet.insert(52);
	finalSet.insert(53);
	finalSet.insert(54);
	finalSet.insert(55);
	finalSet.insert(56);
	finalSet.insert(57);
	finalSet.insert(58);
	finalSet.insert(59);
	finalSet.insert(60);
	finalSet.insert(61);
	finalSet.insert(63);
	finalSet.insert(64);
	finalSet.insert(66);
	finalSet.insert(67);
	finalSet.insert(68);
	finalSet.insert(69);
	finalSet.insert(70);
	finalSet.insert(71);
	finalSet.insert(72);
	finalSet.insert(73);
	finalSet.insert(74);
	finalSet.insert(75);
	finalSet.insert(76);
	finalSet.insert(78);
	finalSet.insert(79);
	finalSet.insert(80);
	finalSet.insert(81);
	finalSet.insert(82);
	finalSet.insert(83);
	finalSet.insert(84);
	finalSet.insert(85);
	finalSet.insert(86);
	finalSet.insert(87);
	finalSet.insert(88);
	finalSet.insert(89);
	finalSet.insert(90);
	finalSet.insert(91);
	finalSet.insert(92);
	finalSet.insert(93);
	finalSet.insert(95);
	finalSet.insert(96);
	finalSet.insert(97);
	finalSet.insert(98);
	finalSet.insert(99);
	finalSet.insert(100);
	finalSet.insert(101);
	finalSet.insert(102);
	finalSet.insert(103);
	finalSet.insert(104);
	finalSet.insert(105);
	finalSet.insert(106);
	finalSet.insert(107);
	finalSet.insert(108);
	finalSet.insert(110);
	finalSet.insert(111);
	finalSet.insert(112);
	finalSet.insert(113);
	finalSet.insert(114);
	finalSet.insert(115);
	finalSet.insert(116);
	finalSet.insert(117);
	finalSet.insert(119);
	finalSet.insert(120);
	finalSet.insert(121);
	finalSet.insert(122);
	finalSet.insert(124);
	finalSet.insert(125);
	finalSet.insert(127);
	finalSet.insert(128);
}

string performAction(unsigned int state) {
	switch(state) {
	case 1 :return "ws";
	case 2 :return "num";
	case 3 :return "num";
	case 4 :return "id";
	case 5 :return "id";
	case 6 :return "id";
	case 7 :return "id";
	case 8 :return "id";
	case 9 :return "id";
	case 10 :return "id";
	case 11 :return "id";
	case 12 :return "id";
	case 13 :return "id";
	case 14 :return "id";
	case 15 :return "id";
	case 17 :return "+";
	case 18 :return "-";
	case 19 :return "/";
	case 21 :return "*";
	case 22 :return "%";
	case 23 :return "=";
	case 24 :return "&";
	case 25 :return "|";
	case 26 :return "!";
	case 27 :return "<";
	case 28 :return ">";
	case 29 :return "^";
	case 30 :return "(";
	case 31 :return ")";
	case 32 :return "{";
	case 33 :return "}";
	case 34 :return "[";
	case 35 :return "]";
	case 36 :return ";";
	case 37 :return ",";
	case 38 :return "\"";
	case 39 :return "\'";
	case 44 :return "filename";
	case 45 :return "id";
	case 46 :return "id";
	case 47 :return "id";
	case 48 :return "id";
	case 49 :return "id";
	case 50 :return "id";
	case 51 :return "if";
	case 52 :return "id";
	case 53 :return "id";
	case 54 :return "id";
	case 55 :return "id";
	case 56 :return "id";
	case 57 :return "id";
	case 58 :return "id";
	case 59 :return "id";
	case 60 :return "+=";
	case 61 :return "-=";
	case 63 :return "//";
	case 64 :return "/=";
	case 66 :return "*=";
	case 67 :return "%=";
	case 68 :return "==";
	case 69 :return "&&";
	case 70 :return "||";
	case 71 :return "!=";
	case 72 :return "<=";
	case 73 :return "<<";
	case 74 :return ">=";
	case 75 :return ">>";
	case 76 :return "num";
	case 78 :return "num";
	case 79 :return "num";
	case 80 :return "id";
	case 81 :return "id";
	case 82 :return "id";
	case 83 :return "id";
	case 84 :return "id";
	case 85 :return "id";
	case 86 :return "int";
	case 87 :return "id";
	case 88 :return "id";
	case 89 :return "id";
	case 90 :return "id";
	case 91 :return "id";
	case 92 :return "id";
	case 93 :return "id";
	case 95 :return "num";
	case 96 :return "bool";
	case 97 :return "id";
	case 98 :return "char";
	case 99 :return "else";
	case 100 :return "id";
	case 101 :return "id";
	case 102 :return "id";
	case 103 :return "id";
	case 104 :return "id";
	case 105 :return "id";
	case 106 :return "true";
	case 107 :return "void";
	case 108 :return "id";
	case 110 :return "break";
	case 111 :return "false";
	case 112 :return "float";
	case 113 :return "id";
	case 114 :return "id";
	case 115 :return "id";
	case 116 :return "id";
	case 117 :return "while";
	case 119 :return "id";
	case 120 :return "return";
	case 121 :return "id";
	case 122 :return "static";
	case 124 :return "id";
	case 125 :return "set_mem";
	case 127 :return "load_mem";
	case 128 :return "include";
	default: return "";
	}
}// end function
#endif 
